name: Azure Site Extension

on:
  workflow_dispatch:

env:
  # Enable versioned runner quiet mode to make CI output easier to read:
  # OUTPUT_MODE: quiet
  SPEC_FILE_TEMPLATE: 'NewRelic.Azure.WebSites.Extension.NodeAgent.nuspec'
  PACKAGE_FILENAME: 'default package'
  SPEC_CONTENT: 'default spec'
  AGENT_VERSION: 'default agent'
  TEST_VAR: 'default var'

jobs:
  setup_tools:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup dotnet '6.0.x'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Display dotnet version
      run: dotnet --version
    - name: Display NuGet version
      run: nuget ?

  create_extension_bundle:
    runs-on: windows-latest
    needs:
      - setup_tools

    strategy:
      matrix:
        node-version: ['20.x']
        # Node 22 isn't yet available on Azure

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
#      - name: Test variable definition
#        run: |
#          echo "TEST_VAR=my value" | Out-File -FilePath $env:GITHUB_ENV
#          echo "TEST_VAR=my appended value" | Out-File -FilePath $env:GITHUB_ENV -Append
#          echo "TEST_VAR=my plain old GITHUB_ENV value" | Out-File -FilePath $GITHUB_ENV
#          echo "My value from {{env.TEST_VAR}}: ${{ env.TEST_VAR }}"
      - name: GitHub Example
        id: step_one
        run: |
          echo "action_state_no_append=yellow" | Out-File -FilePath $env:GITHUB_ENV
          echo "action_state=yellow" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "agent_version=$(npm view newrelic version)" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Use the value
        id: step_two
        run: |
          echo "action state: ${{ env.action_state }}" # This will output 'yellow'
          echo "action state no-append: ${{ env.action_state_no_append }}" 
          echo "agent_version: ${{ env.agent_version }}" 

      - name: Find agent version
        run: |
          echo "new relic version test"
          npm view newrelic version
#          echo "AGENT_VERSION=$(npm view newrelic version)" >> $env:GITHUB_ENV
#          cd "cloud-tooling/azure-site-extension"
#          pwd
#          echo "Agent version: ${{ env.AGENT_VERSION }}"
#          echo $env:AGENT_VERSION
#          echo "Node version: ${{ matrix.node-version }}"
#          echo ("PACKAGE_FILENAME=NewRelic.Azure.WebSites.Extension.NodeAgent.${{env.AGENT_VERSION}}.${{ matrix.node-version }}") >> $env:GITHUB_ENV
#          echo "Package filename: ${{ env.PACKAGE_FILENAME }}"

#      - name: install_agent
#        run: |
#          cd .\Content
#          npm i newrelic@${{ env.AGENT_VERSION }}
#      - name: configure_package
#        run: |
#          cd ..
#          (Get-Content ${{ env.SPEC_FILE_TEMPLATE }}).Replace('{VERSION}', ${{ env.AGENT_VERSION }}).Replace('{NODE_VERSION}', ${{ matrix.node-version }}) | Set-Content ${{ env.PACKAGE_FILENAME }}.nuspec
#          get-content ${{ env.SPEC_FILE_TEMPLATE }} | %{$_ -replace "{VERSION}","${{ env.AGENT_VERSION }}"} >> ${{NUSPEC_GENERATED}}

#      - name: pack
#        run: nuget pack "${{ env.PACKAGE_FILENAME }}.nuspec" -OutputDirectory=./azure-site-extension/dist
#      - name: Archive package for verification
#        uses: actions/upload-artifact@v4
#        with:
#          name: azure-site-extension-test-${{ env.PACKAGE_FILENAME }}
#          path: ./azure-site-extension/dist/

#      - name: publish_package
#        run: |
#          NUGET_API_KEY=$1
#          NUGET_SOURCE=$2
#          dotnet nuget push "NewRelic.Azure.WebSites.Extension.NodeAgent.${VERSION}.nupkg" --api-key ${NUGET_API_KEY} --source ${NUGET_SOURCE}
#



